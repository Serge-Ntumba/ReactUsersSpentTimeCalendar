{"version":3,"sources":["helpers/helper.js","Components/table/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["spentMinutes","startTime","endTime","Error","startHours","Number","split","startMinutes","endHours","endMinutes","mapDaysToTd","days","allObj","dayNumber","lastDayNumber","allMinutes","map","day","index","Date","Start","End","uuidv4","renderLastDay","length","Table","className","Array","keys","users","user","Fullname","Days","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAuBeA,MAvBf,SAAsBC,EAAWC,GAI9B,IAAKD,IAAcC,EAChB,MAAM,IAAIC,MAAM,kEAGnB,IAAMC,EAAaC,OAAOJ,EAAUK,MAAM,KAAK,IACzCC,EAAeF,OAAOJ,EAAUK,MAAM,KAAK,IAE3CE,EAAWH,OAAOH,EAAQI,MAAM,KAAK,IACrCG,EAAaJ,OAAOH,EAAQI,MAAM,KAAK,IAE7C,IAAKF,IAAeG,IAAiBC,IAAaC,EAC/C,MAAM,IAAIN,MAAM,gDAKnB,OAnBgB,GAiBGI,EAjBH,IAiBmBC,EAAWJ,EAAa,GAAeK,GAEzD,G,OCdpB,SAASC,EAAYC,EAAMC,GACxB,IAAIC,EAAY,KACZC,EAAgB,EAGpB,OAFAF,EAAOG,WAAa,EAEbJ,EAAKK,KAAI,SAACC,EAAKC,GAInB,OAHAL,EAAYR,OAAOY,EAAIE,KAAKb,MAAM,KAAK,IACvCM,EAAOG,YAAcf,EAAaiB,EAAIG,MAAOH,EAAII,KAE7CR,EAAYC,IAAkB,GAC/BA,EAAgBD,EAGb,qCACG,kCAASS,eACT,mCAAqBtB,EAAaiB,EAAIG,MAAOH,EAAII,OAAxCC,mBAGPT,EAAYC,IAAkB,GACtCA,EAAgBD,EAGb,qCACG,kCAASS,eACT,kCAASA,eACT,mCAAqBtB,EAAaiB,EAAIG,MAAOH,EAAII,OAAxCC,oBAIfR,EAAgBD,EACT,mCAAqBb,EAAaiB,EAAIG,MAAOH,EAAII,OAAxCC,mBAKzB,SAASC,EAAcZ,GAGpB,GAAgB,KAFAN,OAAOM,EAAKA,EAAKa,OAAS,GAAGL,KAAKb,MAAM,KAAK,IAG1D,OAAO,kCAASgB,eAsCPG,MAlCf,WACG,IAAIb,EAAS,CACVG,WAAY,MAEf,OACG,8BACG,wBAAOW,UAAU,gBAAjB,UACG,gCACG,+BACG,qCAASJ,eACR,YAAIK,MAAM,IAAIC,QAAQZ,KAAI,SAACH,EAAWK,GAAZ,OACxB,6BAAoBL,EAAY,GAAvBS,kBAEZ,8CAASA,oBAGf,gCACIO,EAAMb,KAAI,SAAAc,GACR,OACG,+BACG,6BAAoBA,EAAKC,UAAhBT,eAERZ,EAAYoB,EAAKE,KAAMpB,GACvBW,EAAcO,EAAKE,MACpB,6BAAoBpB,EAAOG,YAAlBO,iBALHQ,EAAKG,eCzDpBC,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCMSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0764458d.chunk.js","sourcesContent":["function spentMinutes(startTime, endTime) {\n   const MINUTES = 60;\n   let result = null;\n\n   if (!startTime || !endTime) {\n      throw new Error(\"spentMinutes: startTime and endTime can't be undefined or null\");\n   }\n\n   const startHours = Number(startTime.split('-')[0]);\n   const startMinutes = Number(startTime.split('-')[1]);\n\n   const endHours = Number(endTime.split('-')[0]);\n   const endMinutes = Number(endTime.split('-')[1]);\n\n   if (!startHours || !startMinutes || !endHours || !endMinutes) {\n      throw new Error(\"Hours and minutes can't be undefined or null\");\n   }\n\n   result = MINUTES - startMinutes + (endHours - startHours - 1) * MINUTES + endMinutes;\n\n   return result || 0;\n}\n\nexport default spentMinutes;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport users from './data.json';\nimport spentMinutes from '../../helpers/helper';\n\nfunction mapDaysToTd(days, allObj) {\n   let dayNumber = null;\n   let lastDayNumber = 0;\n   allObj.allMinutes = 0;\n\n   return days.map((day, index) => {\n      dayNumber = Number(day.Date.split('-')[2]);\n      allObj.allMinutes += spentMinutes(day.Start, day.End);\n\n      if (dayNumber - lastDayNumber === 2) {\n         lastDayNumber = dayNumber;\n\n         return (\n            <>\n               <td key={uuidv4()}>0</td>\n               <td key={uuidv4()}> {spentMinutes(day.Start, day.End)}</td>\n            </>\n         );\n      } else if (dayNumber - lastDayNumber === 3) {\n         lastDayNumber = dayNumber;\n\n         return (\n            <>\n               <td key={uuidv4()}>0</td>\n               <td key={uuidv4()}>0</td>\n               <td key={uuidv4()}> {spentMinutes(day.Start, day.End)}</td>\n            </>\n         );\n      } else {\n         lastDayNumber = dayNumber;\n         return <td key={uuidv4()}> {spentMinutes(day.Start, day.End)}</td>;\n      }\n   });\n}\n\nfunction renderLastDay(days) {\n   const lastDay = Number(days[days.length - 1].Date.split('-')[2]);\n\n   if (lastDay !== 31) {\n      return <td key={uuidv4()}>0</td>;\n   }\n}\n\nfunction Table() {\n   let allObj = {\n      allMinutes: null,\n   };\n   return (\n      <div>\n         <table className='content-table'>\n            <thead>\n               <tr>\n                  <th key={uuidv4()}>user</th>\n                  {[...Array(31).keys()].map((dayNumber, index) => (\n                     <th key={uuidv4()}>{dayNumber + 1}</th>\n                  ))}\n                  <th key={uuidv4()}>Monthly total</th>\n               </tr>\n            </thead>\n            <tbody>\n               {users.map(user => {\n                  return (\n                     <tr key={user.id}>\n                        <td key={uuidv4()}>{user.Fullname}</td>\n\n                        {mapDaysToTd(user.Days, allObj)}\n                        {renderLastDay(user.Days)}\n                        <td key={uuidv4()}>{allObj.allMinutes}</td>\n                     </tr>\n                  );\n               })}\n            </tbody>\n         </table>\n      </div>\n   );\n}\n\nexport default Table;\n","import './App.css';\nimport Table from './Components/table/Table';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}